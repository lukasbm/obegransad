#pragma once

#include <Arduino.h>
#include "sprites.hpp"


// sprite size: 6x7 (6x658 total)
constexpr uint8_t spriteData[94*11] = {
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, //
		0x0f, 0x00, 0xf0, 0x0f, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x0f, 0x00, //
		0x0c, 0xc0, 0xcc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, //
		0x0c, 0xc3, 0xff, 0x0c, 0xc3, 0xff, 0x0c, 0xc0, 0xcc, 0x00, 0x00, //
		0x0c, 0xc3, 0xff, 0xcc, 0xc3, 0xfc, 0x0c, 0xff, 0xfc, 0x0c, 0xc0, //
		0xf0, 0x0f, 0x0f, 0x03, 0xc0, 0xf0, 0x3c, 0x0f, 0x0f, 0x00, 0xf0, //
		0x3c, 0x0f, 0x30, 0xfc, 0x0f, 0xf3, 0xf0, 0xcf, 0xfc, 0x0f, 0x30, //
		0x00, 0xc0, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, //
		0x03, 0xc0, 0xfc, 0x3c, 0x03, 0xc0, 0x3c, 0x00, 0xfc, 0x03, 0xc0, //
		0x0f, 0x00, 0xfc, 0x00, 0xf0, 0x0f, 0x00, 0xf0, 0xfc, 0x0f, 0x00, //
		0x0f, 0x0c, 0xf3, 0x3f, 0xcf, 0xff, 0x3f, 0xcc, 0xf3, 0x0f, 0x00, //
		0x00, 0x00, 0xf0, 0x0f, 0x0f, 0xff, 0x0f, 0x00, 0xf0, 0x00, 0x00, //
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x0f, 0xc0, //
		0x00, 0x00, 0x00, 0x3f, 0xf3, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, //
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x0f, 0x00, //
		0x00, 0x00, 0x0f, 0x03, 0xc0, 0xf0, 0x3c, 0x0f, 0x00, 0x00, 0x00, //
		0x3f, 0xcf, 0xff, 0xf0, 0xff, 0x0f, 0xf0, 0xff, 0xff, 0x3f, 0xc0, //
		0x0f, 0x03, 0xf0, 0x0f, 0x00, 0xf0, 0x0f, 0x00, 0xf0, 0x0f, 0x00, //
		0x3f, 0xcf, 0xff, 0x00, 0xf0, 0xfc, 0x3c, 0x0f, 0xff, 0xff, 0xf0, //
		0x3f, 0xcf, 0xff, 0x00, 0xf0, 0xfc, 0x00, 0xff, 0xff, 0x3f, 0xc0, //
		0xf0, 0xff, 0x0f, 0xf0, 0xff, 0xff, 0x00, 0xf0, 0x0f, 0x00, 0xf0, //
		0xff, 0xff, 0xff, 0xf0, 0x0f, 0xff, 0x00, 0xff, 0xff, 0x3f, 0xc0, //
		0x3f, 0xcf, 0xff, 0xf0, 0x0f, 0xff, 0xf0, 0xff, 0xff, 0x3f, 0xc0, //
		0xff, 0xff, 0xff, 0x00, 0xf0, 0xfc, 0x0f, 0x00, 0xf0, 0x0f, 0x00, //
		0x3f, 0xcf, 0xff, 0xf0, 0xf3, 0xfc, 0xf0, 0xff, 0xff, 0x3f, 0xc0, //
		0x3f, 0xcf, 0xff, 0xf0, 0xf3, 0xff, 0x00, 0xff, 0xff, 0x3f, 0xc0, //
		0x00, 0x00, 0xf0, 0x0f, 0x00, 0x00, 0x0f, 0x00, 0xf0, 0x00, 0x00, //
		0x00, 0x00, 0xf0, 0x0f, 0x00, 0x00, 0x0f, 0x00, 0xf0, 0x0c, 0x00, //
		0x00, 0x00, 0x3c, 0x0f, 0x03, 0xc0, 0x3c, 0x00, 0xf0, 0x03, 0xc0, //
		0x00, 0x00, 0xff, 0x0f, 0xf0, 0x00, 0x0f, 0xf0, 0xff, 0x00, 0x00, //
		0x00, 0x00, 0xf0, 0x03, 0xc0, 0x0f, 0x00, 0xf0, 0x3c, 0x0f, 0x00, //
		0x0f, 0xc3, 0xff, 0x00, 0xf0, 0xfc, 0x0f, 0x00, 0x00, 0x0f, 0x00, //
		0x00, 0x03, 0xf0, 0xc3, 0xcc, 0xcc, 0xc3, 0xcc, 0x00, 0x3f, 0xc0, //
		0x3f, 0xcf, 0xff, 0xf0, 0xff, 0xff, 0xf0, 0xff, 0x0f, 0xf0, 0xf0, //
		0xff, 0xcf, 0xff, 0xf0, 0xff, 0xfc, 0xf0, 0xff, 0xff, 0xff, 0xc0, //
		0x3f, 0xcf, 0xff, 0xfc, 0x0f, 0x00, 0xfc, 0x0f, 0xff, 0x3f, 0xc0, //
		0xff, 0xcf, 0xff, 0xf0, 0xff, 0x0f, 0xf0, 0xff, 0xff, 0xff, 0xc0, //
		0xff, 0xff, 0xff, 0xf0, 0x0f, 0xf0, 0xf0, 0x0f, 0xff, 0xff, 0xf0, //
		0xff, 0xff, 0xff, 0xf0, 0x0f, 0xf0, 0xf0, 0x0f, 0x00, 0xf0, 0x00, //
		0x2f, 0x8f, 0xaf, 0xb0, 0x0f, 0x28, 0xb0, 0xff, 0xbf, 0x3f, 0x80, //
		0xf0, 0xbe, 0x0e, 0xf0, 0xbe, 0xfe, 0xf0, 0xaf, 0x0f, 0xf0, 0xb0, //
		0x0b, 0x00, 0xf0, 0x0f, 0x00, 0xf0, 0x0f, 0x00, 0xf0, 0x0e, 0x00, //
		0x3e, 0xf2, 0xbf, 0x00, 0xf0, 0x0f, 0x00, 0xf3, 0xff, 0x0e, 0xc0, //
		0xf0, 0xbf, 0x3c, 0xff, 0x0f, 0xc0, 0xff, 0x0f, 0x38, 0xf0, 0xb0, //
		0xf0, 0x0f, 0x00, 0xf0, 0x0f, 0x00, 0xf0, 0x0f, 0xef, 0xfe, 0xf0, //
		0xfc, 0xff, 0xff, 0xf3, 0x3f, 0x03, 0xf0, 0x3f, 0x03, 0xf0, 0x30, //
		0xf0, 0xff, 0xcf, 0xfc, 0xff, 0xff, 0xf3, 0xff, 0x0f, 0xf0, 0xf0, //
		0x3f, 0xcf, 0xff, 0xf0, 0xff, 0x0f, 0xf0, 0xff, 0xff, 0x3f, 0xc0, //
		0xff, 0xcf, 0xff, 0xf0, 0xff, 0xfc, 0xf0, 0x0f, 0x00, 0xf0, 0x00, //
		0x3f, 0xcf, 0xff, 0xf0, 0xff, 0x0f, 0xf3, 0xff, 0xfc, 0x3f, 0x30, //
		0xff, 0xcf, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xcf, 0x3f, 0xf0, 0xf0, //
		0x3f, 0xcf, 0xff, 0xf0, 0x03, 0xfc, 0x00, 0xff, 0xff, 0x3f, 0xc0, //
		0xff, 0xff, 0xff, 0x0f, 0x00, 0xf0, 0x0f, 0x00, 0xf0, 0x0f, 0x00, //
		0xf0, 0xff, 0x0f, 0xf0, 0xff, 0x0f, 0xf0, 0xff, 0xff, 0x3f, 0xc0, //
		0xf0, 0xff, 0x0f, 0xf0, 0xff, 0xcf, 0x3c, 0xc3, 0xcc, 0x3f, 0xc0, //
		0xf0, 0x3f, 0x03, 0xf0, 0x3f, 0x33, 0xf3, 0x3f, 0xff, 0x3f, 0xc0, //
		0xf0, 0xff, 0x0f, 0x3f, 0xc0, 0xf0, 0x3f, 0xcf, 0x0f, 0xf0, 0xf0, //
		0xf0, 0xff, 0x0f, 0xf0, 0xf3, 0xfc, 0x0f, 0x00, 0xf0, 0x0f, 0x00, //
		0xff, 0xff, 0xff, 0x03, 0xc0, 0xf0, 0x3c, 0x0f, 0xff, 0xff, 0xf0, //
		0xcf, 0x33, 0xfc, 0xf0, 0xff, 0xff, 0xf0, 0xff, 0x0f, 0xf0, 0xf0, //
		0xc0, 0x33, 0xfc, 0xff, 0xff, 0x0f, 0xf0, 0xff, 0xff, 0x3f, 0xc0, //
		0xf0, 0xf0, 0x00, 0xf0, 0xff, 0x0f, 0xf0, 0xff, 0xff, 0x3f, 0xc0, //
		0x03, 0x00, 0xcc, 0x30, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, //
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xf0, //
		0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, //
		0x3f, 0xcf, 0xff, 0xf0, 0xff, 0xff, 0xf0, 0xff, 0x0f, 0xf0, 0xf0, //
		0xff, 0xcf, 0xff, 0xf0, 0xff, 0xfc, 0xf0, 0xff, 0xff, 0xff, 0xc0, //
		0x3f, 0xcf, 0xff, 0xfc, 0x0f, 0x00, 0xfc, 0x0f, 0xff, 0x3f, 0xc0, //
		0xff, 0xcf, 0xff, 0xf0, 0xff, 0x0f, 0xf0, 0xff, 0xff, 0xff, 0xc0, //
		0xff, 0xff, 0xff, 0xf0, 0x0f, 0xf0, 0xf0, 0x0f, 0xff, 0xff, 0xf0, //
		0xff, 0xff, 0xff, 0xf0, 0x0f, 0xf0, 0xf0, 0x0f, 0x00, 0xf0, 0x00, //
		0x2f, 0x8f, 0xaf, 0xb0, 0x0f, 0x28, 0xb0, 0xff, 0xbf, 0x3f, 0x80, //
		0xf0, 0xbe, 0x0e, 0xf0, 0xbe, 0xfe, 0xf0, 0xaf, 0x0f, 0xf0, 0xb0, //
		0x0b, 0x00, 0xf0, 0x0f, 0x00, 0xf0, 0x0f, 0x00, 0xf0, 0x0e, 0x00, //
		0x3e, 0xf2, 0xbf, 0x00, 0xf0, 0x0f, 0x00, 0xf3, 0xff, 0x0e, 0xc0, //
		0xa0, 0xbf, 0x3c, 0xff, 0x0f, 0xc0, 0xfe, 0x0f, 0x38, 0xf0, 0xa0, //
		0xa0, 0x0f, 0x00, 0xf0, 0x0f, 0x00, 0xf0, 0x0f, 0xaa, 0xfe, 0xf0, //
		0xa8, 0xaf, 0xef, 0xf3, 0x3f, 0x03, 0xf0, 0x3f, 0x03, 0xf0, 0x30, //
		0xa0, 0xaf, 0x8f, 0xfc, 0xff, 0xef, 0xf3, 0xff, 0x0f, 0xf0, 0xf0, //
		0x3f, 0xcb, 0xff, 0xf0, 0xff, 0x0f, 0xf0, 0xff, 0xaf, 0x3f, 0xc0, //
		0xff, 0xcf, 0xff, 0xf0, 0xff, 0xfc, 0xf0, 0x0f, 0x00, 0xf0, 0x00, //
		0x3f, 0xcf, 0xff, 0xf0, 0xff, 0x0f, 0xf2, 0xff, 0xbc, 0x3f, 0x20, //
		0xaa, 0x8f, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xcf, 0x3f, 0xf0, 0xf0, //
		0x2f, 0x8f, 0xfe, 0xf0, 0x03, 0xfc, 0x00, 0xff, 0xff, 0xff, 0xc0, //
		0xaa, 0xaf, 0xff, 0x0f, 0x00, 0xf0, 0x0f, 0x00, 0xf0, 0x0f, 0x00, //
		0xa0, 0xaf, 0x0f, 0xf0, 0xff, 0x0f, 0xf0, 0xff, 0xff, 0x3f, 0xc0, //
		0xa0, 0xaf, 0x0f, 0xf0, 0xff, 0x8f, 0x3c, 0xc3, 0xcc, 0x3e, 0xc0, //
		0xa0, 0x2f, 0x03, 0xf0, 0x3f, 0x23, 0xf3, 0x3f, 0xbb, 0x3f, 0xc0, //
		0xa0, 0xaf, 0x0f, 0x3a, 0xc0, 0xf0, 0x2f, 0x8b, 0x0e, 0xf0, 0xf0, //
		0xa0, 0xaf, 0x0f, 0xf0, 0xf3, 0xac, 0x0f, 0x00, 0xf0, 0x0f, 0x00, //
		0xaa, 0xaf, 0xff, 0x03, 0xc0, 0xb0, 0x2c, 0x0b, 0xea, 0xff, 0xf0, //
		0x8f, 0x23, 0xfc, 0xf0, 0xff, 0xaf, 0xf0, 0xff, 0x0f, 0xf0, 0xf0, //
		0x80, 0x23, 0xfc, 0xff, 0xff, 0x0f, 0xf0, 0xff, 0xff, 0x3f, 0xc0, //
		0xe0, 0xa0, 0x00, 0xf0, 0xff, 0x0f, 0xf0, 0xff, 0xff, 0x3f, 0xc0, //
};

// keep only ONE of the following:
constexpr TextureAtlas atlas(spriteData, 6, 7, 94);
constexpr SpriteSheet atlas(spriteData, 6, 7, 94);
constexpr FontSheet atlas(spriteData, 6, 7, 94, 32);
